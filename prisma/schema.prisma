// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Futsal {
  id           Int       @id @default(autoincrement())
  name         String
  address      String
  description  String?
  pricePerHour Float
  ownerId      Int       @unique
  owner        User      @relation(fields: [ownerId], references: [id])
  createdAt    DateTime  @default(now())
  updatedAt    DateTime? @updatedAt
  bookings     Booking[]
}

model User {
  id          Int       @id @default(autoincrement())
  name        String
  email       String    @unique
  password    String
  phoneNumber String
  role        Role      @default(USER)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime? @updatedAt
  futsal      Futsal?
  bookings    Booking[]
}

enum Role {
  USER
  ADMIN
  OWNER
}

model Booking {
  id         Int           @id @default(autoincrement())
  futsalId   Int
  futsal     Futsal        @relation(fields: [futsalId], references: [id])
  userId     Int
  user       User          @relation(fields: [userId], references: [id])
  startTime  DateTime
  endTime    DateTime
  totalPrice Float
  status     BookingStatus @default(PENDING)
  createdAt  DateTime      @default(now())
  updatedAt  DateTime      @updatedAt
}

enum BookingStatus {
  PENDING
  CONFIRMED
  CANCELLED
}
